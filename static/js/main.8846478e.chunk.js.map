{"version":3,"sources":["constants/inputActionTypes.js","constants/selectActionTypes.js","constants/textareaActionTypes.js","components/MainListItems.js","actions/inputActions.js","actions/selectActions.js","actions/textareaActions.js","constants/htmlTag/Types.js","constants/dnd/Types.js","constants/counterActionTypes.js","actions/counterActions.js","components/Dnd/CardContent/HtmlTag.js","components/Dnd/CardContent/Input.js","components/Dnd/CardContent/Select.js","components/Dnd/CardContent/Textarea.js","components/Dnd/Card.js","components/Elements.js","constants/htmlTag/input/Types.js","components/InputDialog.js","components/SelectDialog.js","components/TextareaDialog.js","components/Dashboard.js","reducers/counterReducer.js","reducers/inputReducer.js","reducers/selectReducer.js","reducers/textareaReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["inputActionTypes","ADD","CLOSE_ADD_DIALOG","DELETE","OPEN_ADD_DIALOG","SET","selectActionTypes","textareaActionTypes","MainListItems","dispatch","useDispatch","ListItem","button","onClick","type","ListItemIcon","ListItemText","primary","htmlTagTypes","INPUT","OPTION","SELECT","TEXTAREA","dndTypes","CARD","counterActionTypes","INCREASE","DECREASE","increaseCount","HtmlTag","name","attr","emptyAttr","text","closing","nonContainer","jsx","push","Object","keys","map","item","style","marginLeft","Input","elem","CardContent","Typography","gutterBottom","variant","label","subtype","placeholder","Select","options","option","Textarea","border","padding","marginBottom","backgroundColor","cursor","DndCard","index","moveCard","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","handleDelete","event","preventDefault","payload","order","deleteTextarea","deleteSelect","Card","CardActionArea","renderContent","CardActions","Button","size","color","e","console","log","Elements","state","useSelector","elems","input","items","select","textarea","sort","a","b","i","reorder","filter","setSelect","setTextarea","renderCard","htmlTagInputTypes","DATE","EMAIL","NUMBER","PASSWORD","TEXT","TIME","URL","InputDialog","useState","setState","count","counter","open","handleInputChange","target","value","Dialog","aria-labelledby","DialogTitle","id","DialogContent","onSubmit","InputLabel","fullWidth","required","onChange","MenuItem","disabled","key","charAt","substring","toLowerCase","TextField","autoFocus","margin","DialogActions","SelectDialog","initialState","handleSelectChange","length","onAdd","chip","handleAddChip","onDelete","handleDeleteChip","TextareaDialog","handleTextareaChange","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","React","setOpen","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","component","noWrap","Drawer","Divider","List","Container","maxWidth","Grid","xs","DndProvider","backend","HTML5Backend","Paper","reducer","action","rootReducer","combineReducers","counterReducer","inputReducer","selectReducer","textareaReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8846478e.chunk.js","sourcesContent":["const inputActionTypes = {\n  ADD: 'ADD_INPUT',\n  CLOSE_ADD_DIALOG: 'CLOSE_ADD_DIALOG_INPUT',\n  DELETE: 'DELETE_INPUT',\n  OPEN_ADD_DIALOG: 'OPEN_ADD_DIALOG_INPUT',\n  SET: 'SET_INPUT'\n};\n\nexport default inputActionTypes;\n","const selectActionTypes = {\n  ADD: 'ADD_SELECT',\n  CLOSE_ADD_DIALOG: 'CLOSE_ADD_DIALOG_SELECT',\n  DELETE: 'DELETE_SELECT',\n  OPEN_ADD_DIALOG: 'OPEN_ADD_DIALOG_SELECT',\n  SET: 'SET_SELECT'\n};\n\nexport default selectActionTypes;\n","const textareaActionTypes = {\n  ADD: 'ADD_TEXTAREA',\n  CLOSE_ADD_DIALOG: 'CLOSE_ADD_DIALOG_TEXTAREA',\n  DELETE: 'DELETE_TEXTAREA',\n  OPEN_ADD_DIALOG: 'OPEN_ADD_DIALOG_TEXTAREA',\n  SET: 'SET_TEXTAREA'\n};\n\nexport default textareaActionTypes;\n","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { click as clickInput } from \"actions/inputActions\";\nimport { click as clickSelect } from \"actions/selectActions\";\nimport { click as clickTextarea } from \"actions/textareaActions\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ListIcon from '@material-ui/icons/List';\nimport SubjectIcon from '@material-ui/icons/Subject';\n\nconst MainListItems = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <ListItem button onClick={() => dispatch(clickInput())}>\n        <ListItemIcon>\n          <TextFieldsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Input\" />\n      </ListItem>\n      <ListItem button onClick={() => dispatch(clickSelect())}>\n        <ListItemIcon>\n          <ListIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Select\" />\n      </ListItem>\n      <ListItem button onClick={() => dispatch(clickTextarea())}>\n        <ListItemIcon>\n          <SubjectIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Textarea\" />\n      </ListItem>\n    </div>\n  );\n};\n\nexport default MainListItems;\n","import inputActionTypes from 'constants/inputActionTypes'\n\nexport const add = (payload) => ({\n  type: inputActionTypes.ADD,\n  payload: payload\n});\n\nexport const cancel = () => ({\n  type: inputActionTypes.CLOSE_ADD_DIALOG\n});\n\nexport const click = () => ({\n  type: inputActionTypes.OPEN_ADD_DIALOG\n});\n\nexport const del = (payload) => ({\n  type: inputActionTypes.DELETE,\n  payload: payload\n});\n\nexport const set = (payload) => ({\n  type: inputActionTypes.SET,\n  payload: payload\n});\n","import selectActionTypes from 'constants/selectActionTypes'\n\nexport const add = (payload) => ({\n  type: selectActionTypes.ADD,\n  payload: payload\n});\n\nexport const cancel = () => ({\n  type: selectActionTypes.CLOSE_ADD_DIALOG\n});\n\nexport const click = () => ({\n  type: selectActionTypes.OPEN_ADD_DIALOG\n});\n\nexport const del = (payload) => ({\n  type: selectActionTypes.DELETE,\n  payload: payload\n});\n\nexport const set = (payload) => ({\n  type: selectActionTypes.SET,\n  payload: payload\n});\n","import textareaActionTypes from 'constants/textareaActionTypes'\n\nexport const add = (payload) => ({\n  type: textareaActionTypes.ADD,\n  payload: payload\n});\n\nexport const cancel = () => ({\n  type: textareaActionTypes.CLOSE_ADD_DIALOG\n});\n\nexport const click = () => ({\n  type: textareaActionTypes.OPEN_ADD_DIALOG\n});\n\nexport const del = (payload) => ({\n  type: textareaActionTypes.DELETE,\n  payload: payload\n});\n\nexport const set = (payload) => ({\n  type: textareaActionTypes.SET,\n  payload: payload\n});\n","const htmlTagTypes = {\n  INPUT: 'INPUT',\n  OPTION: 'OPTION',\n  SELECT: 'SELECT',\n  TEXTAREA: 'TEXTAREA'\n};\n\nexport default htmlTagTypes;\n","const dndTypes = {\n  CARD: 'CARD',\n}\n\nexport default dndTypes;\n","const counterActionTypes = {\n  INCREASE: 'INCREASE_COUNTER',\n  DECREASE: 'DECREASE_COUNTER'\n};\n\nexport default counterActionTypes;\n","import counterActionTypes from 'constants/counterActionTypes'\n\nexport const increaseCount = () => ({\n  type: counterActionTypes.INCREASE\n});\n\nexport const decreaseCount = () => ({\n  type: counterActionTypes.DECREASE\n});\n","import React from \"react\";\n\nconst HtmlTag = ({ name, attr, emptyAttr, text, closing, nonContainer }) => {\n  let jsx = [];\n\n  if (closing === true) {\n    jsx.push(<code>&lt;/{name}&gt;</code>);\n    return jsx;\n  } else {\n    jsx.push(<code>&lt;{name}</code>);\n  }\n\n  if (attr) {\n    jsx.push(<code>{Object.keys(attr).map((item) => (\n        <span style={{marginLeft: 10}}>{item}=\"{attr[item]}\"</span>\n    ))}</code>);\n  }\n\n  if (emptyAttr) {\n    jsx.push(<code>{emptyAttr.map((item) => (\n        <span style={{marginLeft: 10}}>{item}</span>\n    ))}</code>);\n  }\n\n  if (nonContainer) {\n    jsx.push(<code>&nbsp;/&gt;</code>);\n    return jsx;\n  } else if (text) {\n    jsx.push(<code>&gt;</code>);\n    jsx.push(<code>{text}</code>);\n    jsx.push(<code>&lt;/{name}</code>);\n  }\n\n  jsx.push(<code>&gt;</code>);\n\n  return <div>{jsx}<br/></div>;\n};\n\nexport default HtmlTag;\n","import React from \"react\";\nimport { CardContent } from '@material-ui/core';\nimport HtmlTag from './HtmlTag';\nimport Typography from '@material-ui/core/Typography';\n\nconst Input = ({ elem }) => {\n  return (\n    <CardContent>\n      <Typography gutterBottom variant=\"h6\">\n        Input\n      </Typography>\n      <HtmlTag name=\"label\" text={elem.label} />\n      <HtmlTag\n        name=\"input\"\n        attr={{\n          type: elem.subtype,\n          placeholder: elem.placeholder\n        }}\n        nonContainer={true}\n      />\n    </CardContent>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { CardContent } from '@material-ui/core';\nimport HtmlTag from './HtmlTag';\nimport Typography from '@material-ui/core/Typography';\n\nconst Select = ({ elem }) => {\n  return (\n    <CardContent>\n      <Typography gutterBottom variant=\"h6\">\n        Select\n      </Typography>\n      <HtmlTag\n        name=\"label\"\n        text={elem.label}\n      />\n      <HtmlTag\n        name=\"select\"\n      />\n      <HtmlTag\n        name=\"option\"\n        text={elem.placeholder}\n        emptyAttr={ ['disabled', 'selected'] }\n      />\n      <div style={{ marginLeft: 10 }}>\n        {(elem.options).map(option =>\n          <HtmlTag name=\"option\" text={option} />\n        )}\n      </div>\n      <HtmlTag\n        name=\"select\"\n        closing={true}\n      />\n    </CardContent>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport { CardContent } from '@material-ui/core';\nimport HtmlTag from './HtmlTag';\nimport Typography from '@material-ui/core/Typography';\n\nconst Textarea = ({ elem }) => {\n  return (\n    <CardContent>\n      <Typography gutterBottom variant=\"h6\">\n        Textarea\n      </Typography>\n      <HtmlTag name=\"label\" text={elem.label} />\n      <HtmlTag\n        name=\"textarea\"\n        attr={{\n          placeholder: elem.placeholder\n        }}\n      />\n    </CardContent>\n  );\n};\n\nexport default Textarea;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport dndTypes from 'constants/dnd/Types';\nimport { decreaseCount } from \"actions/counterActions\";\nimport { del as deleteInput } from \"actions/inputActions\";\nimport { del as deleteTextarea } from \"actions/textareaActions\";\nimport { del as deleteSelect } from \"actions/selectActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport { Button, Card, CardActionArea, CardActions } from '@material-ui/core';\nimport InputCardContent from \"./CardContent/Input\";\nimport SelectCardContent from \"./CardContent/Select\";\nimport TextareaCardContent from \"./CardContent/Textarea\";\n\nconst style = {\n  border: \"1px dashed gray\",\n  padding: \"0.5rem 1rem\",\n  marginBottom: \".5rem\",\n  backgroundColor: \"white\",\n  cursor: \"move\"\n};\n\nconst DndCard = ({ index, elem, moveCard }) => {\n  const dispatch = useDispatch();\n\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: dndTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: dndTypes.CARD, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  drag(drop(ref));\n\n  const handleEdit = (event, elem) => {\n    event.preventDefault();\n    console.log('TODO ...');\n  }\n\n  const handleDelete = (event, elem) => {\n    event.preventDefault();\n    switch (elem.type) {\n      case htmlTagTypes.INPUT:\n        dispatch(deleteInput(elem.order));\n        break;\n      case htmlTagTypes.TEXTAREA:\n        dispatch(deleteTextarea(elem.order));\n        break;\n      case htmlTagTypes.SELECT:\n        dispatch(deleteSelect(elem.order));\n        break;\n      default:\n        break;\n    }\n\n    dispatch(decreaseCount());\n  }\n\n  const renderContent = (elem) => {\n    switch (elem.type) {\n      case htmlTagTypes.INPUT:\n        return <InputCardContent elem={elem} />;\n      case htmlTagTypes.SELECT:\n        return <SelectCardContent elem={elem} />;\n      case htmlTagTypes.TEXTAREA:\n        return <TextareaCardContent elem={elem} />;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <Card ref={ref} style={{ ...style, opacity }}>\n      <CardActionArea>\n        {renderContent(elem)}\n        <CardActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={(e) => handleEdit(e, elem)}\n          >\n            Edit\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={(e) => handleDelete(e, elem)}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default DndCard;\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { set as setInput } from \"actions/inputActions\";\nimport { set as setSelect } from \"actions/selectActions\";\nimport { set as setTextarea } from \"actions/textareaActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport DndCard from './Dnd/Card';\n\nexport default function Elements() {\n  const dispatch = useDispatch();\n\n  const state = useSelector(state => state);\n\n  let elems = [\n    ...state.input.items,\n    ...state.select.items,\n    ...state.textarea.items\n  ]\n  .sort((a, b) => (a.order - b.order))\n  .map((elem, i) => {\n    elem.order = i;\n    return elem;\n  });\n\n  const reorder = (elems, dragIndex, hoverIndex) => {\n    return elems.map((elem) => {\n      if (elem.order === hoverIndex) {\n        elem.order = dragIndex;\n      } else if (elem.order === dragIndex) {\n        elem.order = hoverIndex;\n      }\n      return elem;\n    }).sort((a, b) => (a.order - b.order));\n  };\n\n  const moveCard = (dragIndex, hoverIndex) => {\n    reorder(elems, dragIndex, hoverIndex);\n    dispatch(\n      setInput({\n        items: elems.filter(elem => elem.type === htmlTagTypes.INPUT)\n      })\n    );\n    dispatch(\n      setSelect({\n        items: elems.filter(elem => elem.type === htmlTagTypes.SELECT)\n      })\n    );\n    dispatch(\n      setTextarea({\n        items: elems.filter(elem => elem.type === htmlTagTypes.TEXTAREA)\n      })\n    );\n  }\n\n  const renderCard = (elem, i) => {\n    return (\n      <DndCard\n        key={i}\n        index={elem.order}\n        elem={elem}\n        moveCard={moveCard}\n      />\n    )\n  };\n\n  return (\n    <div>{elems.map((elem, i) => renderCard(elem, i))}</div>\n  );\n}\n","const htmlTagInputTypes = {\n  DATE: 'date',\n  EMAIL: 'email',\n  NUMBER: 'number',\n  PASSWORD: 'password',\n  TEXT: 'text',\n  TIME: 'time',\n  URL: 'url'\n};\n\nexport default htmlTagInputTypes;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseCount } from \"actions/counterActions\";\nimport { add as addInput, cancel as cancelInput } from \"actions/inputActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport htmlTagInputTypes from 'constants/htmlTag/input/Types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem,\n  TextField, Select } from '@material-ui/core';\n\nexport default function InputDialog() {\n  const [state, setState] = useState({\n    label: null,\n    order: null,\n    placeholder: null,\n    type: htmlTagTypes.INPUT,\n    subtype: htmlTagInputTypes.TEXT\n  });\n\n  const count = useSelector(state => state.counter.count);\n\n  const open = useSelector(state => state.input.open);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (event) => {\n    setState({\n      ...state,\n      order: count,\n      [event.target.name] : event.target.value\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(addInput(state));\n    dispatch(increaseCount());\n  }\n\n  return (\n    <div>\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Input</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <InputLabel>Type</InputLabel>\n            <Select\n              value={state.subtype}\n              name=\"subtype\"\n              fullWidth\n              required\n              onChange={handleInputChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select a type\n              </MenuItem>\n              {Object.keys(htmlTagInputTypes).map((key, i) => (\n                <MenuItem key={i} value={htmlTagInputTypes[key]}>\n                  {key.charAt(0) + key.substring(1).toLowerCase()}\n                </MenuItem>\n              ))}\n            </Select>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"label\"\n              label=\"Label\"\n              type=\"text\"\n              fullWidth\n              required\n              onChange={handleInputChange}\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"placeholder\"\n              label=\"Placeholder\"\n              type=\"text\"\n              fullWidth\n              onChange={handleInputChange}\n            />\n            <DialogActions>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n              <Button onClick={() => dispatch(cancelInput())} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseCount } from \"actions/counterActions\";\nimport { add as addSelect, cancel as cancelSelect } from \"actions/selectActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport ChipInput from 'material-ui-chip-input';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\n\nexport default function SelectDialog() {\n  const initialState = {\n    label: null,\n    order: null,\n    placeholder: null,\n    options: [],\n    type: htmlTagTypes.SELECT\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const count = useSelector(state => state.counter.count);\n\n  const open = useSelector(state => state.select.open);\n\n  const dispatch = useDispatch();\n\n  const handleSelectChange = (event) => {\n    setState({\n      ...state,\n      order: count,\n      [event.target.name] : event.target.value\n    });\n  }\n\n  const handleAddChip = (chip) => {\n    setState({\n      ...state,\n      order: count,\n      options: [...state.options, chip]\n    });\n  }\n\n  const handleDeleteChip = (chip) => {\n    setState({\n      ...state,\n      order: count,\n      options: state.options.filter(item => item !== chip)\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(addSelect(state));\n    dispatch(increaseCount());\n    setState(initialState);\n  }\n\n  const handleCancel = (event) => {\n    event.preventDefault();\n    dispatch(cancelSelect());\n    setState(initialState);\n  }\n\n  return (\n    <div>\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Select</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"label\"\n              label=\"Label\"\n              type=\"text\"\n              fullWidth\n              required\n              onChange={handleSelectChange}\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"placeholder\"\n              label=\"Placeholder\"\n              type=\"text\"\n              fullWidth\n              onChange={handleSelectChange}\n            />\n            <ChipInput\n              label=\"Options\"\n              fullWidth\n              required={state.options.length > 0 ? false : true}\n              value={state.options}\n              onAdd={(chip) => handleAddChip(chip)}\n              onDelete={(chip, i) => handleDeleteChip(chip, i)}\n            />\n            <DialogActions>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n              <Button onClick={handleCancel} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseCount } from \"actions/counterActions\";\nimport { add as addTextarea, cancel as cancelTextarea } from \"actions/textareaActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function TextareaDialog() {\n  const [state, setState] = useState({\n    label: null,\n    order: null,\n    placeholder: null,\n    type: htmlTagTypes.TEXTAREA\n  });\n\n  const count = useSelector(state => state.counter.count);\n\n  const open = useSelector(state => state.textarea.open);\n\n  const dispatch = useDispatch();\n\n  const handleTextareaChange = (event) => {\n    setState({\n      ...state,\n      order: count,\n      [event.target.name] : event.target.value\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(addTextarea(state));\n    dispatch(increaseCount());\n  }\n\n  return (\n    <div>\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Textarea</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"label\"\n              label=\"Label\"\n              type=\"text\"\n              fullWidth\n              required\n              onChange={handleTextareaChange}\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"placeholder\"\n              label=\"Placeholder\"\n              type=\"text\"\n              fullWidth\n              onChange={handleTextareaChange}\n            />\n            <DialogActions>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n              <Button onClick={() => dispatch(cancelTextarea())} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { AppBar, Container, Divider, Drawer, Grid, IconButton, List, Paper,\n  Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MainListItems from './MainListItems';\nimport Elements from './Elements';\nimport InputDialog from './InputDialog';\nimport SelectDialog from './SelectDialog';\nimport TextareaDialog from './TextareaDialog';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            HTML Form Builder\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <MainListItems />\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <DndProvider backend={HTML5Backend}>\n                <Elements />\n              </DndProvider>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                To do: Display the HTML form here!\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n      <InputDialog />\n      <SelectDialog />\n      <TextareaDialog />\n    </div>\n  );\n}\n","import counterActionTypes from 'constants/counterActionTypes';\n\nconst initialState = {\n  count: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case counterActionTypes.INCREASE:\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n    case counterActionTypes.DECREASE:\n      return {\n        ...state,\n        count: state.count - 1,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import inputActionTypes from 'constants/inputActionTypes';\n\nconst initialState = {\n  open: false,\n  items: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inputActionTypes.ADD:\n      return {\n        ...state,\n        open: false,\n        items: [...state.items, action.payload]\n      };\n    case inputActionTypes.CLOSE_ADD_DIALOG:\n      return {\n        ...state,\n        open: false,\n      };\n    case inputActionTypes.DELETE:\n      return {\n        ...state,\n        items: state.items.filter(item => item.order !== action.payload)\n      };\n    case inputActionTypes.OPEN_ADD_DIALOG:\n      return {\n        ...state,\n        open: true,\n      };\n    case inputActionTypes.SET:\n      return {\n        ...state,\n        items: action.payload.items,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import selectActionTypes from 'constants/selectActionTypes';\n\nconst initialState = {\n  open: false,\n  items: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case selectActionTypes.ADD:\n      return {\n        ...state,\n        open: false,\n        items: [...state.items, action.payload]\n      };\n    case selectActionTypes.CLOSE_ADD_DIALOG:\n      return {\n        ...state,\n        open: false,\n      };\n    case selectActionTypes.DELETE:\n      return {\n        ...state,\n        items: state.items.filter(item => item.order !== action.payload)\n      };\n    case selectActionTypes.OPEN_ADD_DIALOG:\n      return {\n        ...state,\n        open: true,\n      };\n    case selectActionTypes.SET:\n      return {\n        ...state,\n        items: action.payload.items,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import textareaActionTypes from 'constants/textareaActionTypes';\n\nconst initialState = {\n  open: false,\n  items: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case textareaActionTypes.ADD:\n      return {\n        ...state,\n        open: false,\n        items: [...state.items, action.payload]\n      };\n    case textareaActionTypes.CLOSE_ADD_DIALOG:\n      return {\n        ...state,\n        open: false,\n      };\n    case textareaActionTypes.DELETE:\n      return {\n        ...state,\n        items: state.items.filter(item => item.order !== action.payload)\n      };\n    case textareaActionTypes.OPEN_ADD_DIALOG:\n      return {\n        ...state,\n        open: true,\n      };\n    case textareaActionTypes.SET:\n      return {\n        ...state,\n        items: action.payload.items,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport counterReducer from './counterReducer';\nimport inputReducer from './inputReducer';\nimport selectReducer from './selectReducer';\nimport textareaReducer from './textareaReducer';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  input: inputReducer,\n  select: selectReducer,\n  textarea: textareaReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// const store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './components/Dashboard';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Dashboard />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}