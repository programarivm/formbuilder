{"version":3,"sources":["constants/inputActionTypes.js","constants/selectActionTypes.js","constants/textareaActionTypes.js","components/MainListItems.js","actions/inputActions.js","actions/selectActions.js","actions/textareaActions.js","constants/htmlTag/Types.js","constants/dnd/Types.js","constants/counterActionTypes.js","actions/counterActions.js","components/Dnd/CardContent/Input.js","components/Dnd/CardContent/Select.js","components/Dnd/CardContent/Textarea.js","components/Dnd/Card.js","components/DndCards.js","constants/htmlTag/input/Types.js","components/Dialog/Add/Input.js","components/Dialog/Add/Select.js","components/Dialog/Add/Textarea.js","components/TheForm.js","components/Dashboard.js","reducers/counterReducer.js","reducers/inputReducer.js","reducers/selectReducer.js","reducers/textareaReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["inputActionTypes","ADD","CLOSE_ADD_DIALOG","DELETE","OPEN_ADD_DIALOG","SET","selectActionTypes","textareaActionTypes","MainListItems","dispatch","useDispatch","ListItem","button","onClick","type","ListItemIcon","ListItemText","primary","htmlTagTypes","INPUT","OPTION","SELECT","TEXTAREA","dndTypes","CARD","counterActionTypes","INCREASE","DECREASE","increaseCount","HtmlToReactParser","require","Parser","useStyles","makeStyles","theme","formGroup","width","Input","elem","classes","reactElement","parse","html","CardContent","className","Select","Textarea","style","border","padding","marginBottom","backgroundColor","cursor","DndCard","index","moveCard","ref","useRef","useDrop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","handleDelete","event","preventDefault","payload","order","deleteTextarea","deleteSelect","Card","CardActionArea","renderContent","CardActions","Button","size","color","e","DndCards","state","useSelector","elems","input","items","select","textarea","sort","a","b","map","i","reorder","filter","setSelect","setTextarea","renderCard","htmlTagInputTypes","DATE","EMAIL","NUMBER","PASSWORD","TEXT","TIME","URL","initialState","label","placeholder","subtype","useState","setState","count","counter","open","handleInputChange","target","name","value","Dialog","aria-labelledby","DialogTitle","id","DialogContent","onSubmit","InputLabel","fullWidth","required","onChange","MenuItem","disabled","Object","keys","key","charAt","substring","toLowerCase","TextField","autoFocus","margin","DialogActions","options","handleSelectChange","option","join","length","onAdd","chip","handleAddChip","onDelete","handleDeleteChip","handleTextareaChange","format","node","level","textNode","indentBefore","Array","indentAfter","children","document","createTextNode","insertBefore","lastElementChild","appendChild","paper","spacing","display","overflow","flexDirection","TheForm","textToCopy","str","div","createElement","innerHTML","trim","prettify","Paper","text","startIcon","root","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","title","flexGrow","drawerPaper","position","whiteSpace","appBarSpacer","mixins","content","height","container","paddingTop","paddingBottom","Dashboard","CssBaseline","AppBar","clsx","Toolbar","Typography","component","variant","noWrap","Drawer","List","Container","maxWidth","Grid","xs","sm","md","DndProvider","backend","HTML5Backend","reducer","action","rootReducer","combineReducers","counterReducer","inputReducer","selectReducer","textareaReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d976b38.chunk.js","sourcesContent":["const inputActionTypes = {\n  ADD: 'ADD_INPUT',\n  CLOSE_ADD_DIALOG: 'CLOSE_ADD_DIALOG_INPUT',\n  DELETE: 'DELETE_INPUT',\n  OPEN_ADD_DIALOG: 'OPEN_ADD_DIALOG_INPUT',\n  SET: 'SET_INPUT'\n};\n\nexport default inputActionTypes;\n","const selectActionTypes = {\n  ADD: 'ADD_SELECT',\n  CLOSE_ADD_DIALOG: 'CLOSE_ADD_DIALOG_SELECT',\n  DELETE: 'DELETE_SELECT',\n  OPEN_ADD_DIALOG: 'OPEN_ADD_DIALOG_SELECT',\n  SET: 'SET_SELECT'\n};\n\nexport default selectActionTypes;\n","const textareaActionTypes = {\n  ADD: 'ADD_TEXTAREA',\n  CLOSE_ADD_DIALOG: 'CLOSE_ADD_DIALOG_TEXTAREA',\n  DELETE: 'DELETE_TEXTAREA',\n  OPEN_ADD_DIALOG: 'OPEN_ADD_DIALOG_TEXTAREA',\n  SET: 'SET_TEXTAREA'\n};\n\nexport default textareaActionTypes;\n","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { click as clickInput } from \"actions/inputActions\";\nimport { click as clickSelect } from \"actions/selectActions\";\nimport { click as clickTextarea } from \"actions/textareaActions\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ListIcon from '@material-ui/icons/List';\nimport SubjectIcon from '@material-ui/icons/Subject';\n\nconst MainListItems = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <ListItem button onClick={() => dispatch(clickInput())}>\n        <ListItemIcon>\n          <TextFieldsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Input\" />\n      </ListItem>\n      <ListItem button onClick={() => dispatch(clickSelect())}>\n        <ListItemIcon>\n          <ListIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Select\" />\n      </ListItem>\n      <ListItem button onClick={() => dispatch(clickTextarea())}>\n        <ListItemIcon>\n          <SubjectIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Textarea\" />\n      </ListItem>\n    </div>\n  );\n};\n\nexport default MainListItems;\n","import inputActionTypes from 'constants/inputActionTypes'\n\nexport const add = (payload) => ({\n  type: inputActionTypes.ADD,\n  payload: payload\n});\n\nexport const cancel = () => ({\n  type: inputActionTypes.CLOSE_ADD_DIALOG\n});\n\nexport const click = () => ({\n  type: inputActionTypes.OPEN_ADD_DIALOG\n});\n\nexport const del = (payload) => ({\n  type: inputActionTypes.DELETE,\n  payload: payload\n});\n\nexport const set = (payload) => ({\n  type: inputActionTypes.SET,\n  payload: payload\n});\n","import selectActionTypes from 'constants/selectActionTypes'\n\nexport const add = (payload) => ({\n  type: selectActionTypes.ADD,\n  payload: payload\n});\n\nexport const cancel = () => ({\n  type: selectActionTypes.CLOSE_ADD_DIALOG\n});\n\nexport const click = () => ({\n  type: selectActionTypes.OPEN_ADD_DIALOG\n});\n\nexport const del = (payload) => ({\n  type: selectActionTypes.DELETE,\n  payload: payload\n});\n\nexport const set = (payload) => ({\n  type: selectActionTypes.SET,\n  payload: payload\n});\n","import textareaActionTypes from 'constants/textareaActionTypes'\n\nexport const add = (payload) => ({\n  type: textareaActionTypes.ADD,\n  payload: payload\n});\n\nexport const cancel = () => ({\n  type: textareaActionTypes.CLOSE_ADD_DIALOG\n});\n\nexport const click = () => ({\n  type: textareaActionTypes.OPEN_ADD_DIALOG\n});\n\nexport const del = (payload) => ({\n  type: textareaActionTypes.DELETE,\n  payload: payload\n});\n\nexport const set = (payload) => ({\n  type: textareaActionTypes.SET,\n  payload: payload\n});\n","const htmlTagTypes = {\n  INPUT: 'INPUT',\n  OPTION: 'OPTION',\n  SELECT: 'SELECT',\n  TEXTAREA: 'TEXTAREA'\n};\n\nexport default htmlTagTypes;\n","const dndTypes = {\n  CARD: 'CARD',\n}\n\nexport default dndTypes;\n","const counterActionTypes = {\n  INCREASE: 'INCREASE_COUNTER',\n  DECREASE: 'DECREASE_COUNTER'\n};\n\nexport default counterActionTypes;\n","import counterActionTypes from 'constants/counterActionTypes'\n\nexport const increaseCount = () => ({\n  type: counterActionTypes.INCREASE\n});\n\nexport const decreaseCount = () => ({\n  type: counterActionTypes.DECREASE\n});\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardContent } from '@material-ui/core';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nconst useStyles = makeStyles((theme) => ({\n  formGroup: {\n    '& label': {\n      width: '100%'\n    },\n    '& input': {\n      width: '100%'\n    }\n  }\n}));\n\nconst Input = ({ elem }) => {\n  const classes = useStyles();\n  const htmlToReactParser = new HtmlToReactParser();\n  const reactElement = htmlToReactParser.parse(elem.html);\n\n  return (\n    <CardContent>\n      <div className={classes.formGroup}>\n        {reactElement}\n      </div>\n    </CardContent>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardContent } from '@material-ui/core';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nconst useStyles = makeStyles((theme) => ({\n  formGroup: {\n    '& label': {\n      width: '100%'\n    },\n    '& select': {\n      width: '100%'\n    }\n  }\n}));\n\nconst Select = ({ elem }) => {\n  const classes = useStyles();\n  const htmlToReactParser = new HtmlToReactParser();\n  const reactElement = htmlToReactParser.parse(elem.html);\n\n  return (\n    <CardContent>\n      <div className={classes.formGroup}>\n        {reactElement}\n      </div>\n    </CardContent>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardContent } from '@material-ui/core';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nconst useStyles = makeStyles((theme) => ({\n  formGroup: {\n    '& label': {\n      width: '100%'\n    },\n    '& textarea': {\n      width: '100%'\n    }\n  }\n}));\n\nconst Textarea = ({ elem }) => {\n  const classes = useStyles();\n  const htmlToReactParser = new HtmlToReactParser();\n  const reactElement = htmlToReactParser.parse(elem.html);\n\n  return (\n    <CardContent>\n      <div className={classes.formGroup}>\n        {reactElement}\n      </div>\n    </CardContent>\n  );\n};\n\nexport default Textarea;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport dndTypes from 'constants/dnd/Types';\nimport { decreaseCount } from \"actions/counterActions\";\nimport { del as deleteInput } from \"actions/inputActions\";\nimport { del as deleteTextarea } from \"actions/textareaActions\";\nimport { del as deleteSelect } from \"actions/selectActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport { Button, Card, CardActionArea, CardActions } from '@material-ui/core';\nimport InputCardContent from \"./CardContent/Input\";\nimport SelectCardContent from \"./CardContent/Select\";\nimport TextareaCardContent from \"./CardContent/Textarea\";\n\nconst style = {\n  border: \"1px dashed gray\",\n  padding: \"0.5rem 1rem\",\n  marginBottom: \".5rem\",\n  backgroundColor: \"white\",\n  cursor: \"move\"\n};\n\nconst DndCard = ({ index, elem, moveCard }) => {\n  const dispatch = useDispatch();\n\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: dndTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: dndTypes.CARD, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  drag(drop(ref));\n\n  const handleDelete = (event, elem) => {\n    event.preventDefault();\n    switch (elem.type) {\n      case htmlTagTypes.INPUT:\n        dispatch(deleteInput(elem.order));\n        break;\n      case htmlTagTypes.TEXTAREA:\n        dispatch(deleteTextarea(elem.order));\n        break;\n      case htmlTagTypes.SELECT:\n        dispatch(deleteSelect(elem.order));\n        break;\n      default:\n        break;\n    }\n\n    dispatch(decreaseCount());\n  }\n\n  const renderContent = (elem) => {\n    switch (elem.type) {\n      case htmlTagTypes.INPUT:\n        return <InputCardContent elem={elem} />;\n      case htmlTagTypes.SELECT:\n        return <SelectCardContent elem={elem} />;\n      case htmlTagTypes.TEXTAREA:\n        return <TextareaCardContent elem={elem} />;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <Card ref={ref} style={{ ...style, opacity }}>\n      <CardActionArea>\n        {renderContent(elem)}\n        <CardActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={(e) => handleDelete(e, elem)}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default DndCard;\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { set as setInput } from \"actions/inputActions\";\nimport { set as setSelect } from \"actions/selectActions\";\nimport { set as setTextarea } from \"actions/textareaActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport DndCard from './Dnd/Card';\n\nexport default function DndCards() {\n  const dispatch = useDispatch();\n\n  const state = useSelector(state => state);\n\n  let elems = [\n    ...state.input.items,\n    ...state.select.items,\n    ...state.textarea.items\n  ]\n  .sort((a, b) => (a.order - b.order))\n  .map((elem, i) => {\n    elem.order = i;\n    return elem;\n  });\n\n  const reorder = (elems, dragIndex, hoverIndex) => {\n    return elems.map((elem) => {\n      if (elem.order === hoverIndex) {\n        elem.order = dragIndex;\n      } else if (elem.order === dragIndex) {\n        elem.order = hoverIndex;\n      }\n      return elem;\n    }).sort((a, b) => (a.order - b.order));\n  };\n\n  const moveCard = (dragIndex, hoverIndex) => {\n    reorder(elems, dragIndex, hoverIndex);\n    dispatch(\n      setInput({\n        items: elems.filter(elem => elem.type === htmlTagTypes.INPUT)\n      })\n    );\n    dispatch(\n      setSelect({\n        items: elems.filter(elem => elem.type === htmlTagTypes.SELECT)\n      })\n    );\n    dispatch(\n      setTextarea({\n        items: elems.filter(elem => elem.type === htmlTagTypes.TEXTAREA)\n      })\n    );\n  }\n\n  const renderCard = (elem, i) => {\n    return (\n      <DndCard\n        key={i}\n        index={elem.order}\n        elem={elem}\n        moveCard={moveCard}\n      />\n    )\n  };\n\n  return (\n    <div>{elems.map((elem, i) => renderCard(elem, i))}</div>\n  );\n}\n","const htmlTagInputTypes = {\n  DATE: 'date',\n  EMAIL: 'email',\n  NUMBER: 'number',\n  PASSWORD: 'password',\n  TEXT: 'text',\n  TIME: 'time',\n  URL: 'url'\n};\n\nexport default htmlTagInputTypes;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseCount } from \"actions/counterActions\";\nimport { add as addInput, cancel as cancelInput } from \"actions/inputActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport htmlTagInputTypes from 'constants/htmlTag/input/Types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem,\n  TextField, Select } from '@material-ui/core';\n\nexport default function Input() {\n  const initialState = {\n    label: null,\n    placeholder: '',\n    type: htmlTagTypes.INPUT,\n    subtype: htmlTagInputTypes.TEXT\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const count = useSelector(state => state.counter.count);\n\n  const open = useSelector(state => state.input.open);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const input = {\n      ...state,\n      order: count,\n      html: `<label>${state.label}</label><input type=\"${state.subtype}\" placeholder=\"${state.placeholder}\" />`\n    };\n    dispatch(addInput(input));\n    dispatch(increaseCount());\n    setState(initialState);\n  }\n\n  return (\n    <div>\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Input</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <InputLabel>Type</InputLabel>\n            <Select\n              value={state.subtype}\n              name=\"subtype\"\n              fullWidth\n              required\n              onChange={handleInputChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select a type\n              </MenuItem>\n              {Object.keys(htmlTagInputTypes).map((key, i) => (\n                <MenuItem key={i} value={htmlTagInputTypes[key]}>\n                  {key.charAt(0) + key.substring(1).toLowerCase()}\n                </MenuItem>\n              ))}\n            </Select>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"label\"\n              label=\"Label\"\n              type=\"text\"\n              fullWidth\n              required\n              onChange={handleInputChange}\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"placeholder\"\n              label=\"Placeholder\"\n              type=\"text\"\n              fullWidth\n              onChange={handleInputChange}\n            />\n            <DialogActions>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n              <Button onClick={() => dispatch(cancelInput())} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseCount } from \"actions/counterActions\";\nimport { add as addSelect, cancel as cancelSelect } from \"actions/selectActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport ChipInput from 'material-ui-chip-input';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\n\nexport default function Select() {\n  const initialState = {\n    label: null,\n    placeholder: 'Select an option',\n    options: [],\n    type: htmlTagTypes.SELECT\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const count = useSelector(state => state.counter.count);\n\n  const open = useSelector(state => state.select.open);\n\n  const dispatch = useDispatch();\n\n  const handleSelectChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name] : event.target.value\n    });\n  }\n\n  const handleAddChip = (chip) => {\n    setState({\n      ...state,\n      options: [...state.options, chip]\n    });\n  }\n\n  const handleDeleteChip = (chip) => {\n    setState({\n      ...state,\n      options: state.options.filter(item => item !== chip)\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const options = (state.options).map(option => `<option>${option}</option>`).join('');\n    const select = {\n      ...state,\n      order: count,\n      html: `<label>${state.label}</label><select><option disabled selected>${state.placeholder}</option>${options}</select>`\n    };\n    dispatch(addSelect(select));\n    dispatch(increaseCount());\n    setState(initialState);\n  }\n\n  const handleCancel = (event) => {\n    event.preventDefault();\n    dispatch(cancelSelect());\n    setState(initialState);\n  }\n\n  return (\n    <div>\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Select</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"label\"\n              label=\"Label\"\n              type=\"text\"\n              fullWidth\n              required\n              onChange={handleSelectChange}\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"placeholder\"\n              label=\"Placeholder\"\n              type=\"text\"\n              fullWidth\n              onChange={handleSelectChange}\n            />\n            <ChipInput\n              label=\"Options\"\n              fullWidth\n              required={state.options.length > 0 ? false : true}\n              value={state.options}\n              onAdd={(chip) => handleAddChip(chip)}\n              onDelete={(chip, i) => handleDeleteChip(chip, i)}\n            />\n            <DialogActions>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n              <Button onClick={handleCancel} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseCount } from \"actions/counterActions\";\nimport { add as addTextarea, cancel as cancelTextarea } from \"actions/textareaActions\";\nimport htmlTagTypes from 'constants/htmlTag/Types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function Textarea() {\n  const initialState = {\n    label: null,\n    placeholder: '',\n    type: htmlTagTypes.TEXTAREA\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const count = useSelector(state => state.counter.count);\n\n  const open = useSelector(state => state.textarea.open);\n\n  const dispatch = useDispatch();\n\n  const handleTextareaChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const textarea = {\n      ...state,\n      order: count,\n      html: `<label>${state.label}</label><textarea placeholder=\"${state.placeholder}\"></textarea>`\n    };\n    dispatch(addTextarea(textarea));\n    dispatch(increaseCount());\n    setState(initialState);\n  }\n\n  return (\n    <div>\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Textarea</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"label\"\n              label=\"Label\"\n              type=\"text\"\n              fullWidth\n              required\n              onChange={handleTextareaChange}\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"placeholder\"\n              label=\"Placeholder\"\n              type=\"text\"\n              fullWidth\n              onChange={handleTextareaChange}\n            />\n            <DialogActions>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n              <Button onClick={() => dispatch(cancelTextarea())} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from \"react-redux\";\nimport { Paper } from '@material-ui/core';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nconst prettify = (str) => {\n  const div = document.createElement('div');\n  div.innerHTML = str.trim();\n\n  return format(div, 0).innerHTML;\n}\n\nconst format = (node, level) => {\n  let indentBefore = new Array(level++ + 1).join('  ');\n  let indentAfter  = new Array(level - 1).join('  ');\n  let textNode;\n  for (let i = 0; i < node.children.length; i++) {\n    textNode = document.createTextNode('\\n' + indentBefore);\n    node.insertBefore(textNode, node.children[i]);\n    format(node.children[i], level);\n    if (node.lastElementChild === node.children[i]) {\n      textNode = document.createTextNode('\\n' + indentAfter);\n      node.appendChild(textNode);\n    }\n  }\n\n  return node;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nconst TheForm = () => {\n  const classes = useStyles();\n\n  const state = useSelector(state => state);\n\n  const elems = [\n    ...state.input.items,\n    ...state.select.items,\n    ...state.textarea.items\n  ]\n  .sort((a, b) => (a.order - b.order))\n  .map((elem, i) => {\n    elem.order = i;\n    return elem;\n  });\n\n  const html = elems.map(elem => elem.html).join('');\n\n  const textToCopy = prettify(`<form>${html}</form>`);\n\n  if (html) {\n    return <div>\n      <Paper className={classes.paper}>\n        <CopyToClipboard text={textToCopy}>\n          <Button\n            color=\"default\"\n            size=\"small\"\n            startIcon={<FileCopyOutlinedIcon />}\n          >\n            Copy text\n          </Button>\n        </CopyToClipboard>\n        <pre>{textToCopy}</pre>\n      </Paper>\n    </div>\n  }\n\n  return null;\n};\n\nexport default TheForm;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { AppBar, Container, Drawer, Grid, List, Toolbar, Typography } from '@material-ui/core';\nimport MainListItems from './MainListItems';\nimport DndCards from './DndCards';\nimport AddInputDialog from './Dialog/Add/Input';\nimport AddSelectDialog from './Dialog/Add/Select';\nimport AddTextareaDialog from './Dialog/Add/Textarea';\nimport TheForm from './TheForm';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            HTML Form Builder\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper),\n        }}\n      >\n        <List>\n          <MainListItems />\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={12} md={6}>\n              <DndProvider backend={HTML5Backend}>\n                <DndCards />\n              </DndProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6}>\n              <TheForm />\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n      <AddInputDialog />\n      <AddSelectDialog />\n      <AddTextareaDialog />\n    </div>\n  );\n}\n","import counterActionTypes from 'constants/counterActionTypes';\n\nconst initialState = {\n  count: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case counterActionTypes.INCREASE:\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n    case counterActionTypes.DECREASE:\n      return {\n        ...state,\n        count: state.count - 1,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import inputActionTypes from 'constants/inputActionTypes';\n\nconst initialState = {\n  open: false,\n  items: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inputActionTypes.ADD:\n      return {\n        ...state,\n        open: false,\n        items: [...state.items, action.payload]\n      };\n    case inputActionTypes.CLOSE_ADD_DIALOG:\n      return {\n        ...state,\n        open: false,\n      };\n    case inputActionTypes.DELETE:\n      return {\n        ...state,\n        items: state.items.filter(item => item.order !== action.payload)\n      };\n    case inputActionTypes.OPEN_ADD_DIALOG:\n      return {\n        ...state,\n        open: true,\n      };\n    case inputActionTypes.SET:\n      return {\n        ...state,\n        items: action.payload.items,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import selectActionTypes from 'constants/selectActionTypes';\n\nconst initialState = {\n  open: false,\n  items: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case selectActionTypes.ADD:\n      return {\n        ...state,\n        open: false,\n        items: [...state.items, action.payload]\n      };\n    case selectActionTypes.CLOSE_ADD_DIALOG:\n      return {\n        ...state,\n        open: false,\n      };\n    case selectActionTypes.DELETE:\n      return {\n        ...state,\n        items: state.items.filter(item => item.order !== action.payload)\n      };\n    case selectActionTypes.OPEN_ADD_DIALOG:\n      return {\n        ...state,\n        open: true,\n      };\n    case selectActionTypes.SET:\n      return {\n        ...state,\n        items: action.payload.items,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import textareaActionTypes from 'constants/textareaActionTypes';\n\nconst initialState = {\n  open: false,\n  items: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case textareaActionTypes.ADD:\n      return {\n        ...state,\n        open: false,\n        items: [...state.items, action.payload]\n      };\n    case textareaActionTypes.CLOSE_ADD_DIALOG:\n      return {\n        ...state,\n        open: false,\n      };\n    case textareaActionTypes.DELETE:\n      return {\n        ...state,\n        items: state.items.filter(item => item.order !== action.payload)\n      };\n    case textareaActionTypes.OPEN_ADD_DIALOG:\n      return {\n        ...state,\n        open: true,\n      };\n    case textareaActionTypes.SET:\n      return {\n        ...state,\n        items: action.payload.items,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport counterReducer from './counterReducer';\nimport inputReducer from './inputReducer';\nimport selectReducer from './selectReducer';\nimport textareaReducer from './textareaReducer';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  input: inputReducer,\n  select: selectReducer,\n  textarea: textareaReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// const store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './components/Dashboard';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Dashboard />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}